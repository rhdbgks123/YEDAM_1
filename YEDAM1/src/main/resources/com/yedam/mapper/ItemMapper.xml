<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mapper.ItemMapper">

	<select id = "todaySaleList" resultType = "Item">
     select af.item_code,
         af.item_name,
         af.item_category,
         af.sale_price,
         af.item_image,
         AVG(c.star_point) AS review_star_point_avg,
         COUNT(c.review_seq) AS review_cnt
  from  (select ag.*
           from (  
                 select a.item_code,
                        a.item_name,
                        a.item_category,
                        a.sale_price,                        
                        MIN(b.item_image) AS item_image
                        
                        from tb_item a
                        join tb_item_image b
                        on a.item_code = b.item_code
                        
                        where sale_price>0     
                        group by a.item_code, a.item_name, a.item_category, a.sale_price
                 ) ag
      <![CDATA[
      where rownum<=4
      ]]>
      ) af
  join tb_item_review c
  on af.item_code = c.item_code
  group by af.item_code, af.item_name, af.item_category, af.item_image, af.sale_price
  
	</select>
	
	<select id = "todayHotList" resultType = "Item">
     select ag.*
           from (
                    select a.item_code,
                    a.item_name,
                    a.item_category,
                    CASE WHEN a.sale_price > 0 THEN a.sale_price ELSE a.price END "price",
                    a.star_point,
                    MIN(b.item_image) "item_image",
                    COUNT(c.item_code) "review_cnt"
                    from tb_item a
                    join tb_item_image b
                    on a.item_code = b.item_code
                    join tb_item_review c
                    on b.item_code = c.item_code
                    --where sale_price>0     
                    group by a.item_code, a.item_name, a.item_category, a.price, a.sale_price, a.star_point, c.item_code
                    order by a.star_point desc
               ) ag
  <![CDATA[where rownum<=4]]>	
	</select>
	

	<select id = "onClickMenuList" resultType = "Item">
    SELECT af.item_code,
           af.item_name,
           af.item_category,
           af.price,
           af.item_image,
           ROUND(AVG(c.star_point), 1) "review_star_point_avg",
           COUNT(c.review_seq) "review_cnt"
      FROM (SELECT a.item_code,
                   a.item_name,
                   a.item_category,
                   CASE WHEN a.sale_price > 0 THEN a.sale_price ELSE a.price END AS price,                        
                   MIN(b.item_image) AS item_image
              FROM tb_item a
              JOIN tb_item_image b
                ON a.item_code = b.item_code
             WHERE 1=1
             <if test="menuCode != null">
                   AND item_category = #{menuCode}
             </if>
             <if test="itemName != null">
                   AND item_name like '%' || #{itemName} || '%'
             </if> 
             GROUP BY a.item_code, a.item_name, a.item_category, a.sale_price, a.price) af
      JOIN tb_item_review c
        ON af.item_code = c.item_code
     GROUP BY af.item_code, af.item_name, af.item_category, af.item_image, af.price
	</select>
	
	<select id = "itemDetailView" parameterType="String" resultType = "Item">
     select *
       from(select  a.item_code,
                    a.item_name,                    
                    CASE WHEN a.sale_price > 0 THEN a.sale_price ELSE a.price END "price",
                    a.delivery,
                    a.delivery_price,
                    a.star_point,
                    a.description,
                    b.item_image,
                    COUNT(c.item_code) "review_cnt",
                    AVG(c.star_point) "review_star_point_avg"
                    from tb_item a
                    join tb_item_image b
                    on a.item_code = b.item_code
                    join tb_item_review c
                    on b.item_code = c.item_code                    
                    group by a.item_code, a.item_name, a.price, a.sale_price, a.delivery, a.delivery_price, a.star_point, a.description, b.item_image, c.item_code)                    
       where item_code = #{itemCode}
       order by item_image
	</select>
	
	<select id = "reviewList" parameterType="map" resultType = "review">
     select rownum rn,
       c.*
from (select a.review_seq,
              a.star_point,
              a.reviewdetail,
              a.create_date, 
              a.created_by,
              a.update_date,
              a.updated_by,
              COUNT(b.review_image) "review_image_number"
       from tb_item_review a
       left join tb_item_review_image b
       on a.review_seq = b.review_seq
       where item_code = #{bno}
       group by a.review_seq, a.star_point, a.reviewdetail, a.create_date, a.created_by, a.update_date, a.updated_by
       order by create_date desc) c
where rownum > (#{page} -1) * 5
<![CDATA[
and rownum <= #{page} * 5
]]>
	</select>
	
	
</mapper>