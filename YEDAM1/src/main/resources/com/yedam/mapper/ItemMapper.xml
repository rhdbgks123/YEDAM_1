<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.mapper.ItemMapper">

	<select id = "todaySaleList" resultType = "Item">
     select af.item_code,
         af.item_name,
         af.item_category,
         af.sale_price,
         af.item_image,
         AVG(c.star_point) AS review_star_point_avg,
         COUNT(c.review_seq) AS review_cnt
  from  (select ag.*
           from (  
                 select a.item_code,
                        a.item_name,
                        a.item_category,
                        a.sale_price,                        
                        MIN(b.item_image) AS item_image
                        
                        from tb_item a
                        join tb_item_image b
                        on a.item_code = b.item_code
                        
                        where sale_price>0     
                        group by a.item_code, a.item_name, a.item_category, a.sale_price
                 ) ag
      <![CDATA[
      where rownum<=4
      ]]>
      ) af
  join tb_item_review c
  on af.item_code = c.item_code
  group by af.item_code, af.item_name, af.item_category, af.item_image, af.sale_price
  
	</select>
	
	<select id = "todayHotList" resultType = "Item">
     select af.item_code,
            af.item_name,
            af.price,
            af.item_image,
            COUNT(af.review_seq) AS review_cnt,
            ROUND(AVG(af.star_point), 1) AS review_star_point_avg,
            af.views
     from(    select  a.item_code,
		              a.item_name,
		              CASE WHEN a.sale_price > 0 THEN a.sale_price ELSE a.price END AS price,
		              MIN(b.item_image) AS item_image,
		              c.review_seq,
		              c.star_point,
		              ae.views
              from(   select ag.*  
                      from(  select COUNT(*) AS views,
                                    item_code
                                    from tb_last_item
                                    where create_date between trunc(sysdate)-1 and trunc(sysdate)+1                
                                    group by item_code
                                    order by COUNT(*) desc)ag
                    <![CDATA[where rownum<=4]]>
                            ) ae
		      join tb_item a
		      on ae.item_code = a.item_code
		      join tb_item_image b
		      on a.item_code = b.item_code
		      join tb_item_review c
		      on b.item_code = c.item_code
		      group by a.item_code, a.item_name, a.sale_price, a.price, ae.views, c.star_point, c.review_seq) af
group by af.item_code, af.item_name, af.price, af.item_image, af.views
order by  af.views desc
  
	</select>
	

	<select id = "onClickMenuList" resultType = "Item">
    SELECT af.item_code,
           af.item_name,
           af.item_category,
           af.price,
           af.item_image,
           ROUND(AVG(c.star_point), 1) "review_star_point_avg",
           COUNT(c.review_seq) "review_cnt"
      FROM (SELECT a.item_code,
                   a.item_name,
                   a.item_category,
                   CASE WHEN a.sale_price > 0 THEN a.sale_price ELSE a.price END AS price,                        
                   MIN(b.item_image) AS item_image
              FROM tb_item a
              JOIN tb_item_image b
                ON a.item_code = b.item_code
             WHERE 1=1
             <if test="menuCode != null">
                   AND item_category = #{menuCode}
             </if>
             <if test="itemName != null">
                   AND item_name like '%' || #{itemName} || '%'
             </if> 
             GROUP BY a.item_code, a.item_name, a.item_category, a.sale_price, a.price) af
      JOIN tb_item_review c
        ON af.item_code = c.item_code
     GROUP BY af.item_code, af.item_name, af.item_category, af.item_image, af.price
	</select>
	
	<select id = "itemDetailView" parameterType="String" resultType = "Item">
     select *
       from(select  a.item_code,
                    a.item_name,                    
                    CASE WHEN a.sale_price > 0 THEN a.sale_price ELSE a.price END "price",
                    a.delivery,
                    a.delivery_price,
                    a.star_point,
                    a.description,
                    b.item_image,
                    COUNT(c.item_code) "review_cnt",
                    AVG(c.star_point) "review_star_point_avg"
                    from tb_item a
                    join tb_item_image b
                    on a.item_code = b.item_code
                    join tb_item_review c
                    on b.item_code = c.item_code                    
                    group by a.item_code, a.item_name, a.price, a.sale_price, a.delivery, a.delivery_price, a.star_point, a.description, b.item_image, c.item_code)                    
       where item_code = #{itemCode}
       order by item_image
	</select>
	
	<select id = "reviewList" parameterType="map" resultType = "String">
	
	select d.review_json
    from   (select  rownum rn,
                       c.*
            from      ( SELECT JSON_OBJECT(
                             'reviewSeq' VALUE r.review_seq,
                             'reviewDetail' VALUE r.reviewdetail,
                             'starPoint' VALUE r.star_point,                             
                             'createdBy' VALUE r.created_by,
                             'createDate' VALUE r.create_date,
                             'images' VALUE COALESCE(JSON_ARRAYAGG(i.review_image), JSON_ARRAY())
                             ) AS review_json
	                    FROM tb_item_review r
	                    LEFT JOIN tb_item_review_image i
	                           ON r.review_seq = i.review_seq
	                    where item_code = #{bno}       
	                    GROUP BY r.review_seq, r.reviewdetail, r.star_point, r.created_by, r.create_date
	                    order by r.create_date desc) c )d
	where d.rn > (#{page} -1) * 5
	<![CDATA[
	and d.rn <= #{page} * 5
	]]>
     
	</select>
	
	<select id="selectCount" parameterType="String" resultType="int">
	select COUNT(*)
from tb_item_review
where item_code = #{itemCode}
	</select>
	
</mapper>