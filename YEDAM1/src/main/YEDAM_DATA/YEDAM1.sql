DROP TABLE TB_BASKET;
DROP TABLE TB_ITEM;
DROP TABLE TB_ITEM_IMAGE;
DROP TABLE TB_ITEM_REVIEW;
DROP TABLE TB_ITEM_REVIEW_IMAGE;
DROP TABLE TB_ITEM_SPEC;
DROP TABLE TB_LAST_ITEM;
DROP TABLE TB_MENU;
DROP TABLE TB_ORDER;
DROP TABLE TB_ORDERDETAIL;
DROP TABLE TB_SIGNKEY;
DROP TABLE TB_USER;
DROP TABLE TB_BASKET;
DROP TABLE TB_ITEM;
DROP TABLE TB_ITEM_IMAGE;
DROP TABLE TB_ITEM_REVIEW;
DROP TABLE TB_ITEM_REVIEW_IMAGE;
DROP TABLE TB_ITEM_SPEC;
DROP TABLE TB_LAST_ITEM;
DROP TABLE TB_MENU;
DROP TABLE TB_ORDER;
DROP TABLE TB_ORDERDETAIL;
DROP TABLE TB_SIGNKEY;
DROP TABLE TB_USER;
DROP TABLE TB_BASKET;
DROP TABLE TB_ITEM;
DROP TABLE TB_ITEM_IMAGE;
DROP TABLE TB_ITEM_REVIEW;
DROP TABLE TB_ITEM_REVIEW_IMAGE;
DROP TABLE TB_ITEM_SPEC;
DROP TABLE TB_LAST_ITEM;
DROP TABLE TB_MENU;
DROP TABLE TB_ORDER;
DROP TABLE TB_ORDERDETAIL;
DROP TABLE TB_SIGNKEY;
DROP TABLE TB_USER;
CREATE TABLE TB_MENU (
    MENU_CODE VARCHAR2(20) NOT NULL,
    MENU_NAME VARCHAR2(30) NOT NULL,
    PROG_PATH VARCHAR2(100) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT PK_TB_MENU PRIMARY KEY (MENU_CODE)
);

COMMENT ON COLUMN TB_MENU.MENU_CODE IS '메뉴코드';
COMMENT ON COLUMN TB_MENU.MENU_NAME IS '메뉴명';
COMMENT ON COLUMN TB_MENU.PROG_PATH IS '프로그램 경로';
COMMENT ON COLUMN TB_MENU.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_MENU.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_MENU.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_MENU.UPDATED_BY IS '수정자';


CREATE TABLE TB_USER (
    USER_ID VARCHAR2(50) NOT NULL,
    USER_NAME VARCHAR2(50) NOT NULL,
    NICKNAME VARCHAR2(100) NOT NULL,
    BIRTH CHAR(6) NOT NULL,
    IDENTI CHAR(7) NOT NULL,
    EMAIL VARCHAR2(200),
    PHONE VARCHAR2(20),
    ADDRESS VARCHAR2(100),
    ADDRESSDETAIL VARCHAR2(300),
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT PK_TB_USER PRIMARY KEY (USER_ID)
);

COMMENT ON COLUMN TB_USER.USER_ID IS '사용자ID';
COMMENT ON COLUMN TB_USER.USER_NAME IS '사용자 이름';
COMMENT ON COLUMN TB_USER.NICKNAME IS '닉네임';
COMMENT ON COLUMN TB_USER.BIRTH IS '생년월일';
COMMENT ON COLUMN TB_USER.IDENTI IS '주민번호 뒷자리';
COMMENT ON COLUMN TB_USER.EMAIL IS '이메일';
COMMENT ON COLUMN TB_USER.PHONE IS '전화번호';
COMMENT ON COLUMN TB_USER.ADDRESS IS '주소';
COMMENT ON COLUMN TB_USER.ADDRESSDETAIL IS '주소상세';
COMMENT ON COLUMN TB_USER.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_USER.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_USER.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_USER.UPDATED_BY IS '수정자';


CREATE TABLE TB_ITEM (
    ITEM_CODE VARCHAR2(30) NOT NULL,
    ITEM_NAME VARCHAR2(100) NOT NULL,
    SALE_PRICE NUMBER DEFAULT 0,
    PRICE NUMBER DEFAULT 0,
    STAR_POINT NUMBER DEFAULT 0,
    DELIVERY VARCHAR2(20),
    DELIVERY_PRICE NUMBER,
    DESCRIPTION VARCHAR2(3000),
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT PK_TB_ITEM PRIMARY KEY (ITEM_CODE)
);

COMMENT ON COLUMN TB_ITEM.ITEM_CODE IS '상품코드';
COMMENT ON COLUMN TB_ITEM.ITEM_NAME IS '상품명';
COMMENT ON COLUMN TB_ITEM.SALE_PRICE IS '할인단가';
COMMENT ON COLUMN TB_ITEM.PRICE IS '단가';
COMMENT ON COLUMN TB_ITEM.STAR_POINT IS '별점';
COMMENT ON COLUMN TB_ITEM.DELIVERY IS '배송정보';
COMMENT ON COLUMN TB_ITEM.DELIVERY_PRICE IS '배송비';
COMMENT ON COLUMN TB_ITEM.DESCRIPTION IS '제품 상세설명';
COMMENT ON COLUMN TB_ITEM.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_ITEM.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_ITEM.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_ITEM.UPDATED_BY IS '수정자';


CREATE TABLE TB_ITEM_SPEC (
    ITEM_CODE VARCHAR2(30) NOT NULL,
    SPEC_CODE VARCHAR2(30) NOT NULL,
    SPEC_NAME VARCHAR2(100) NOT NULL,
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT PK_TB_ITEM_SPEC PRIMARY KEY (ITEM_CODE, SPEC_CODE),
    CONSTRAINT FK_ITEM_SPEC_ITEM FOREIGN KEY (ITEM_CODE) REFERENCES TB_ITEM(ITEM_CODE)
);

COMMENT ON COLUMN TB_ITEM_SPEC.ITEM_CODE IS '상품코드';
COMMENT ON COLUMN TB_ITEM_SPEC.SPEC_CODE IS '스펙코드';
COMMENT ON COLUMN TB_ITEM_SPEC.SPEC_NAME IS '스펙상세';
COMMENT ON COLUMN TB_ITEM_SPEC.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_ITEM_SPEC.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_ITEM_SPEC.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_ITEM_SPEC.UPDATED_BY IS '수정자';


CREATE TABLE TB_ITEM_REVIEW (
    REVIEW_SEQ NUMBER NOT NULL,
    ITEM_CODE VARCHAR2(30) NOT NULL,
    STAR_POINT NUMBER DEFAULT 0,
    REVIEWDETAIL VARCHAR2(3000),
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT PK_TB_ITEM_REVIEW PRIMARY KEY (REVIEW_SEQ),
    CONSTRAINT FK_ITEM_REVIEW_ITEM FOREIGN KEY (ITEM_CODE) REFERENCES TB_ITEM(ITEM_CODE)
);

COMMENT ON COLUMN TB_ITEM_REVIEW.REVIEW_SEQ IS '리뷰번호';
COMMENT ON COLUMN TB_ITEM_REVIEW.ITEM_CODE IS '상품코드';
COMMENT ON COLUMN TB_ITEM_REVIEW.STAR_POINT IS '별점';
COMMENT ON COLUMN TB_ITEM_REVIEW.REVIEWDETAIL IS '리뷰 상세';
COMMENT ON COLUMN TB_ITEM_REVIEW.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_ITEM_REVIEW.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_ITEM_REVIEW.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_ITEM_REVIEW.UPDATED_BY IS '수정자';


CREATE TABLE TB_ITEM_REVIEW_IMAGE (
    REVIEW_SEQ NUMBER NOT NULL,
    REVIEW_IMAGE VARCHAR2(100),
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT FK_ITEM_REVIEW_IMAGE_REVIEW FOREIGN KEY (REVIEW_SEQ) REFERENCES TB_ITEM_REVIEW(REVIEW_SEQ)
);

COMMENT ON COLUMN TB_ITEM_REVIEW_IMAGE.REVIEW_SEQ IS '리뷰 번호';
COMMENT ON COLUMN TB_ITEM_REVIEW_IMAGE.REVIEW_IMAGE IS '리뷰 이미지';
COMMENT ON COLUMN TB_ITEM_REVIEW_IMAGE.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_ITEM_REVIEW_IMAGE.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_ITEM_REVIEW_IMAGE.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_ITEM_REVIEW_IMAGE.UPDATED_BY IS '수정자';


CREATE TABLE TB_ITEM_IMAGE (
    ITEM_CODE VARCHAR2(30),
    ITEM_IMAGE VARCHAR2(100),
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT FK_ITEM_IMAGE_ITEM FOREIGN KEY (ITEM_CODE) REFERENCES TB_ITEM(ITEM_CODE)
);

COMMENT ON COLUMN TB_ITEM_IMAGE.ITEM_CODE IS '상품코드';
COMMENT ON COLUMN TB_ITEM_IMAGE.ITEM_IMAGE IS '상품이미지';
COMMENT ON COLUMN TB_ITEM_IMAGE.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_ITEM_IMAGE.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_ITEM_IMAGE.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_ITEM_IMAGE.UPDATED_BY IS '수정자';


CREATE TABLE TB_BASKET (
    USER_ID VARCHAR2(50),
    ITEM_CODE VARCHAR2(30),
    ITEM_QTY NUMBER,
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT FK_BASKET_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID),
    CONSTRAINT FK_BASKET_ITEM FOREIGN KEY (ITEM_CODE) REFERENCES TB_ITEM(ITEM_CODE)
);

COMMENT ON COLUMN TB_BASKET.USER_ID IS '사용자ID';
COMMENT ON COLUMN TB_BASKET.ITEM_CODE IS '상품코드';
COMMENT ON COLUMN TB_BASKET.ITEM_QTY IS '상품수량';
COMMENT ON COLUMN TB_BASKET.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_BASKET.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_BASKET.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_BASKET.UPDATED_BY IS '수정자';


CREATE TABLE TB_SIGNKEY (
    USER_ID VARCHAR2(50),
    SIGNKEY CHAR(6),
    CONSTRAINT FK_SIGNKEY_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID)
);

COMMENT ON COLUMN TB_SIGNKEY.USER_ID IS '사용자ID';
COMMENT ON COLUMN TB_SIGNKEY.SIGNKEY IS '인증키';


CREATE TABLE TB_LAST_ITEM (
    USER_ID VARCHAR2(50),
    ITEM_CODE VARCHAR2(30),
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT FK_LAST_ITEM_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID),
    CONSTRAINT FK_LAST_ITEM_ITEM FOREIGN KEY (ITEM_CODE) REFERENCES TB_ITEM(ITEM_CODE)
);

COMMENT ON COLUMN TB_LAST_ITEM.USER_ID IS '사용자ID';
COMMENT ON COLUMN TB_LAST_ITEM.ITEM_CODE IS '상품코드';
COMMENT ON COLUMN TB_LAST_ITEM.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_LAST_ITEM.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_LAST_ITEM.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_LAST_ITEM.UPDATED_BY IS '수정자';


CREATE TABLE TB_ORDER (
    ORDER_NO NUMBER NOT NULL,
    USER_ID VARCHAR2(50),
    ORDER_DATE DATE,
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT PK_TB_ORDER PRIMARY KEY (ORDER_NO),
    CONSTRAINT FK_ORDER_USER FOREIGN KEY (USER_ID) REFERENCES TB_USER(USER_ID)
);

COMMENT ON COLUMN TB_ORDER.ORDER_NO IS '주문번호';
COMMENT ON COLUMN TB_ORDER.USER_ID IS '사용자ID';
COMMENT ON COLUMN TB_ORDER.ORDER_DATE IS '주문일자';
COMMENT ON COLUMN TB_ORDER.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_ORDER.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_ORDER.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_ORDER.UPDATED_BY IS '수정자';


CREATE TABLE TB_ORDERDETAIL (
    ORDER_NO NUMBER NOT NULL,
    ORDERDETAIL_NO NUMBER NOT NULL,
    ITEM_CODE VARCHAR2(30),
    ITEM_QTY NUMBER,
    ITEM_PRICE NUMBER,
    SPEC_CODE VARCHAR2(30),
    CREATE_DATE DATE DEFAULT SYSDATE,
    CREATED_BY VARCHAR2(50),
    UPDATE_DATE DATE DEFAULT SYSDATE,
    UPDATED_BY VARCHAR2(50),
    CONSTRAINT PK_TB_ORDERDETAIL PRIMARY KEY (ORDER_NO, ORDERDETAIL_NO),
    CONSTRAINT FK_ORDERDETAIL_ORDER FOREIGN KEY (ORDER_NO) REFERENCES TB_ORDER(ORDER_NO),
    CONSTRAINT FK_ORDERDETAIL_ITEM FOREIGN KEY (ITEM_CODE) REFERENCES TB_ITEM(ITEM_CODE),
    CONSTRAINT FK_ORDERDETAIL_ITEM_SPEC FOREIGN KEY (ITEM_CODE, SPEC_CODE) REFERENCES TB_ITEM_SPEC(ITEM_CODE, SPEC_CODE)
);

COMMENT ON COLUMN TB_ORDERDETAIL.ORDER_NO IS '주문번호';
COMMENT ON COLUMN TB_ORDERDETAIL.ORDERDETAIL_NO IS '주문상세번호';
COMMENT ON COLUMN TB_ORDERDETAIL.ITEM_CODE IS '상품코드';
COMMENT ON COLUMN TB_ORDERDETAIL.ITEM_QTY IS '주문수량';
COMMENT ON COLUMN TB_ORDERDETAIL.ITEM_PRICE IS '상품판매단가';
COMMENT ON COLUMN TB_ORDERDETAIL.CREATE_DATE IS '생성일자';
COMMENT ON COLUMN TB_ORDERDETAIL.CREATED_BY IS '생성자';
COMMENT ON COLUMN TB_ORDERDETAIL.UPDATE_DATE IS '수정일자';
COMMENT ON COLUMN TB_ORDERDETAIL.UPDATED_BY IS '수정자';


-- Appliance-themed test data with specific relationships (Oracle)
-- Assumes tables & constraints already created per your schema.
-- Counts/Rules:
-- - TB_ITEM: 100 items
-- - Each ITEM has: 3 SPECS, 1 ITEM_IMAGE, 3 REVIEWS, each REVIEW has 3 REVIEW_IMAGES
-- - TB_USER: assume 100 users already or will be generated here (100 rows)
-- - TB_LAST_ITEM: 3 items per user
-- - TB_BASKET: 3~5 items per user
-- - TB_MENU: 100 menus, PROG_PATH holds category in English (e.g., /TV, /COMPUTER)
-- - TB_ORDER: 100 orders; each has 3~5 ORDERDETAIL rows

-- 0) Utility: categories & helper mapping is done by MOD arithmetic inline.

-- 1) TB_MENU (100 rows; category in PROG_PATH)
DECLARE
  v_cats  SYS.ODCIVARCHAR2LIST := SYS.ODCIVARCHAR2LIST(
    'TV','COMPUTER','REFRIGERATOR','WASHER','AIRCON','CLEANER','MICROWAVE','RICECOOKER','DISHWASHER','DRYER','AIRPURIFIER','AUDIO','PROJECTOR','ROUTER','MONITOR'
  );
BEGIN
  FOR i IN 1..100 LOOP
    INSERT INTO TB_MENU (MENU_CODE, MENU_NAME, PROG_PATH, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY)
    VALUES (
      'M' || TO_CHAR(i, 'FM000'),
      '메뉴' || i,
      '/' || v_cats( MOD(i-1, v_cats.COUNT) + 1 ),
      SYSDATE - MOD(i, 30),
      'seed',
      SYSDATE - MOD(i, 20),
      'seed'
    );
  END LOOP;
END;
/
 
-- 2) TB_USER (100 rows)
BEGIN
  FOR i IN 1..100 LOOP
    INSERT INTO TB_USER (
      USER_ID, USER_NAME, NICKNAME, BIRTH, IDENTI, EMAIL, PHONE, ADDRESS, ADDRESSDETAIL,
      CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY
    ) VALUES (
      'user' || i,
      '사용자' || i,
      '닉네임' || i,
      TO_CHAR(750101 + MOD(i*37, 490101)), -- pseudo 6-digit
      LPAD(MOD(i*123457, 10000000), 7, '0'),
      'user' || i || '@example.com',
      '010-' || LPAD(MOD(i*37, 9999),4,'0') || '-' || LPAD(MOD(i*53, 9999),4,'0'),
      '서울시 강남구 테헤란로 ' || MOD(i, 200),
      '아파트 ' || MOD(i, 50) || '동 ' || MOD(i, 100) || '호',
      SYSDATE - MOD(i, 100),
      'seed',
      SYSDATE - MOD(i, 90),
      'seed'
    );
  END LOOP;
END;
/
 
-- 3) TB_ITEM: 100 rows with appliance categories in the name
DECLARE
  v_names SYS.ODCIVARCHAR2LIST := SYS.ODCIVARCHAR2LIST(
    '냉장고','세탁기','TV','에어컨','청소기','전자레인지','전기밥솥','식기세척기','건조기','공기청정기','컴퓨터','모니터','프린터','라우터','프로젝터'
  );
BEGIN
  FOR i IN 1..100 LOOP
    INSERT INTO TB_ITEM (
      ITEM_CODE, ITEM_NAME, SALE_PRICE, PRICE, STAR_POINT, DELIVERY, DELIVERY_PRICE, DESCRIPTION,
      CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY
    ) VALUES (
      'I' || TO_CHAR(i, 'FM000'),
      v_names( MOD(i-1, v_names.COUNT) + 1 ) || ' 모델' || i,
      600000 + (i * 1000),
      700000 + (i * 1500),
      MOD(i, 5) + 1,
      '택배',
      CASE WHEN MOD(i, 10) IN (2,8) THEN 0 ELSE 3000 END,
      '가전제품 상세 설명 ' || i,
      SYSDATE - MOD(i, 60),
      'seed',
      SYSDATE - MOD(i, 50),
      'seed'
    );
  END LOOP;
END;
/
 
-- 4) TB_ITEM_SPEC: 3 specs per item
-- Examples by item type: refrigerator -> capacity 300/400/500L, TV -> UHD/QHD/4K, others generic variants
DECLARE
  v_type VARCHAR2(30);
  v_item VARCHAR2(6);
BEGIN
  FOR i IN 1..100 LOOP
    v_item := 'I' || TO_CHAR(i, 'FM000');
    -- Derive type from item name to pick spec set
    SELECT SUBSTR(ITEM_NAME, 1, INSTR(ITEM_NAME, ' ') - 1)
      INTO v_type
      FROM TB_ITEM WHERE ITEM_CODE = v_item;

    -- Spec 1
    INSERT INTO TB_ITEM_SPEC (ITEM_CODE, SPEC_CODE, SPEC_NAME, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY)
    VALUES (v_item, 'S1',
      CASE v_type
        WHEN '냉장고' THEN '용량: 300L'
        WHEN 'TV'    THEN '해상도: UHD'
        ELSE '색상: 실버'
      END,
      SYSDATE - MOD(i,40), 'seed', SYSDATE - MOD(i,30), 'seed');

    -- Spec 2
    INSERT INTO TB_ITEM_SPEC (ITEM_CODE, SPEC_CODE, SPEC_NAME, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY)
    VALUES (v_item, 'S2',
      CASE v_type
        WHEN '냉장고' THEN '용량: 400L'
        WHEN 'TV'    THEN '해상도: QHD'
        ELSE '소비전력: ' || (80 + MOD(i,60)) || 'W'
      END,
      SYSDATE - MOD(i,39), 'seed', SYSDATE - MOD(i,29), 'seed');

    -- Spec 3
    INSERT INTO TB_ITEM_SPEC (ITEM_CODE, SPEC_CODE, SPEC_NAME, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY)
    VALUES (v_item, 'S3',
      CASE v_type
        WHEN '냉장고' THEN '용량: 500L'
        WHEN 'TV'    THEN '해상도: 4K'
        ELSE '에너지등급: ' || (1 + MOD(i,5)) || '등급'
      END,
      SYSDATE - MOD(i,38), 'seed', SYSDATE - MOD(i,28), 'seed');
  END LOOP;
END;
/
 
-- 5) TB_ITEM_IMAGE: 1 image per item
BEGIN
  FOR i IN 1..100 LOOP
    INSERT INTO TB_ITEM_IMAGE (ITEM_CODE, ITEM_IMAGE, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY)
    VALUES ('I' || TO_CHAR(i,'FM000'), 'item_' || TO_CHAR(i,'FM000') || '.jpg',
            SYSDATE - MOD(i,20), 'seed', SYSDATE - MOD(i,10), 'seed');
  END LOOP;
END;
/
 
-- 6) TB_ITEM_REVIEW: 3 reviews per item
-- REVIEW_SEQ is unique: seq = (item_index-1)*3 + review_index
BEGIN
  FOR i IN 1..100 LOOP
    FOR r IN 1..3 LOOP
      INSERT INTO TB_ITEM_REVIEW (
        REVIEW_SEQ, ITEM_CODE, STAR_POINT, REVIEWDETAIL, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY
      ) VALUES (
        (i-1)*3 + r,
        'I' || TO_CHAR(i,'FM000'),
        3 + MOD(i + r, 3), -- 3~5
        '리뷰 내용 - 아이템 ' || i || ', 리뷰 ' || r,
        SYSDATE - MOD(i + r, 70),
        'user' || (1 + MOD(i + r, 100)),
        SYSDATE - MOD(i + r, 60),
        'user' || (1 + MOD(i + r, 100))
      );
    END LOOP;
  END LOOP;
END;
/
 
-- 7) TB_ITEM_REVIEW_IMAGE: 3 images per review
BEGIN
  FOR i IN 1..100 LOOP
    FOR r IN 1..3 LOOP
      FOR img IN 1..3 LOOP
        INSERT INTO TB_ITEM_REVIEW_IMAGE (
          REVIEW_SEQ, REVIEW_IMAGE, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY
        ) VALUES (
          (i-1)*3 + r,
          'review_' || TO_CHAR((i-1)*3 + r,'FM0000') || '_' || img || '.jpg',
          SYSDATE - MOD(i + r + img, 25),
          'seed',
          SYSDATE - MOD(i + r + img, 15),
          'seed'
        );
      END LOOP;
    END LOOP;
  END LOOP;
END;
/
 
-- 8) TB_ORDER: 100 orders
BEGIN
  FOR i IN 1..100 LOOP
    INSERT INTO TB_ORDER (
      ORDER_NO, USER_ID, ORDER_DATE, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY
    ) VALUES (
      i,
      'user' || (1 + MOD(i-1,100)),
      SYSDATE - MOD(i, 90),
      SYSDATE - MOD(i, 90),
      'seed',
      SYSDATE - MOD(i, 80),
      'seed'
    );
  END LOOP;
END;
/
 
-- 9) TB_ORDERDETAIL: 3~5 items per order
-- ORDERDETAIL_NO runs from 1..N per order; ITEM_PRICE snapshot from TB_ITEM
DECLARE
  v_cnt NUMBER;
  v_code VARCHAR2(6);
BEGIN
  FOR i IN 1..100 LOOP
    v_cnt := 3 + MOD(i,3); -- 3..5
    FOR d IN 1..v_cnt LOOP
      v_code := 'I' || TO_CHAR(1 + MOD(i*7 + d, 100), 'FM000');
      INSERT INTO TB_ORDERDETAIL (
        ORDER_NO, ORDERDETAIL_NO, ITEM_CODE, ITEM_QTY, ITEM_PRICE, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY
      )
      VALUES (
        i,
        d,
        v_code,
        1 + MOD(i + d, 3),
        (SELECT PRICE FROM TB_ITEM WHERE ITEM_CODE = v_code),
        SYSDATE - MOD(i + d, 85),
        'seed',
        SYSDATE - MOD(i + d, 75),
        'seed'
      );
    END LOOP;
  END LOOP;
END;
/
 
-- 10) TB_BASKET: 3~5 items per user
DECLARE
  v_cnt NUMBER;
  v_code VARCHAR2(6);
BEGIN
  FOR u IN 1..100 LOOP
    v_cnt := 3 + MOD(u,3); -- 3..5
    FOR b IN 1..v_cnt LOOP
      v_code := 'I' || TO_CHAR(1 + MOD(u*11 + b, 100), 'FM000');
      INSERT INTO TB_BASKET (USER_ID, ITEM_CODE, ITEM_QTY, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY)
      VALUES (
        'user' || u,
        v_code,
        1 + MOD(u + b, 5),
        SYSDATE - MOD(u + b, 40),
        'seed',
        SYSDATE - MOD(u + b, 35),
        'seed'
      );
    END LOOP;
  END LOOP;
END;
/
 
-- 11) TB_SIGNKEY: 1 per user
BEGIN
  FOR i IN 1..100 LOOP
    INSERT INTO TB_SIGNKEY (USER_ID, SIGNKEY)
    VALUES ('user' || i, LPAD(MOD(i*1307, 1000000), 6, '0'));
  END LOOP;
END;
/
 
-- 12) TB_LAST_ITEM: 3 items per user
DECLARE
  v_code VARCHAR2(6);
BEGIN
  FOR u IN 1..100 LOOP
    FOR k IN 1..3 LOOP
      v_code := 'I' || TO_CHAR(1 + MOD(u*5 + k, 100), 'FM000');
      INSERT INTO TB_LAST_ITEM (USER_ID, ITEM_CODE, CREATE_DATE, CREATED_BY, UPDATE_DATE, UPDATED_BY)
      VALUES (
        'user' || u,
        v_code,
        SYSDATE - MOD(u + k, 30),
        'seed',
        SYSDATE - MOD(u + k, 20),
        'seed'
      );
    END LOOP;
  END LOOP;
END;
/
 
COMMIT;
